package <%= Configuration.package %>.<%= Configuration.controllers_package %>;

import static org.springframework.web.bind.annotation.RequestMethod.DELETE;
import static org.springframework.web.bind.annotation.RequestMethod.GET;
import static org.springframework.web.bind.annotation.RequestMethod.POST;
import static org.springframework.web.bind.annotation.RequestMethod.PUT;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import <%= Configuration.full_models_package %>.<%= class_name %>;
import <%= Configuration.package %>.<%= Configuration.repositories_package %>.<%= repository_class_name %>;
<%- @attributes.each do |att| -%>
	<%- if att.is_reference? -%>
import <%= Configuration.package %>.<%= Configuration.repositories_package %>.<%= att.java_type.pluralize %>;
	<%- end -%>
<%- end -%>

@Controller
public class <%= controller_class_name %> {

	private final <%= repository_class_name %> <%= repository_name %>;
	<%- @attributes.each do |att| -%>
		<%- if att.is_reference? -%>
	private final <%= att.java_type.pluralize %> <%= att.name.pluralize %>;
		<%- end -%>
	<%- end -%>

	@Autowired
	public <%= controller_class_name %>(final <%= repository_class_name %> <%= repository_name %>, <% @attributes.each do |att| -%><%- if att.is_reference? -%>final <%= att.java_type.pluralize %> <%= att.name.pluralize %><%- end -%><% end -%>) {
		this.<%= repository_name %> = <%= repository_name %>;
		<%- @attributes.each do |att| -%>
			<%- if att.type.eql?("references") -%>
		this.<%= att.name.pluralize %> = <%= att.name.pluralize %>;<%- end -%><%- end %>
	}

	@RequestMapping(value = "<%= path %>", method = GET)
	public ModelAndView index() {
		return new ModelAndView("<%= base_path %>/index", "<%= model_parameter_name %>List", <%= repository_name %>.all());
	}

	@RequestMapping(value = "<%= path %>/{id}", method = GET)
	public ModelAndView show(@PathVariable final Long id) {
		return new ModelAndView("<%= base_path %>/show", "<%= model_parameter_name %>", <%= repository_name %>.get(id));
	}

	@RequestMapping(value = "<%= path %>/new", method = GET)
	public ModelAndView new<%= class_name %>() {
		return new ModelAndView("<%= base_path %>/new<%= class_name %>", "<%= model_parameter_name %>", new <%= class_name %>());
	}

	@RequestMapping(value = "<%= path %>", method = POST)
	public String create(@Valid final <%= class_name %> <%= model_parameter_name %>, final BindingResult result,
			final RedirectAttributes attributes) {
		if(result.hasErrors()) {
			return "products/newProduct";
		}
		<%= repository_name %>.add(<%= model_parameter_name %>);
		attributes.addAttribute("id", <%= model_parameter_name %>.getId());
		return "redirect:<%= path %>/{id}";
	}

	@RequestMapping(value = "<%= path %>/{id}/edit", method = GET)
	public ModelAndView edit(@PathVariable final Long id) {
		return new ModelAndView("<%= base_path %>/edit", "<%= model_parameter_name %>", <%= repository_name %>.get(id));
	}

	@RequestMapping(value = "<%= path %>", method = PUT)
	public String update(final <%= class_name %> <%= model_parameter_name %>, final RedirectAttributes attributes) {
		<%= repository_name %>.update(<%= model_parameter_name %>);
		attributes.addAttribute("id", <%= model_parameter_name %>.getId());
		return "redirect:<%= path %>/{id}";
	}

	@RequestMapping(value = "<%= path %>/{id}", method = DELETE)
	public String destroy(@PathVariable final Long id) {
		<%= repository_name %>.remove(<%= repository_name %>.get(id));
		return "redirect:<%= path %>";
	}
}
